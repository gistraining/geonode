version: '2.2'
services:
  db:
    image: geonode/postgis:13
    command: postgres # -c "max_connections=${POSTGRESQL_MAX_CONNECTIONS}"
    restart: unless-stopped
    container_name: db4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: db
        org.geonode.instance.name: geonode
    volumes:
      - dbdata:/var/lib/postgresql/data
      - dbbackups:/pg_backups
    env_file:
      - .env

  django:
    restart: unless-stopped
#    build: .
    image: gistraining/geonode:latest
    container_name: django4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    labels:
      org.geonode.component: django
      org.geonode.instance.name: geonode
    ports:
      - 8000:8000
    depends_on:
      - db
    volumes:
      - statics:/mnt/volumes/statics
      - geoserver-data-dir:/geoserver_data/data
      - backup-restore:/backup_restore
      - data:/data
      - tmp:/tmp
      - .:/usr/src/my_geonode
    env_file:
      - .env
    command: /usr/src/my_geonode/manage.py runserver 0.0.0.0:8000
    #command: /usr/src/my_geonode/manage.py migrate
    environment:
      IS_CELERY: 'False'
      DJANGO_SETTINGS_MODULE: geonode.settings
      DEBUG: 'True'

volumes:
#  jenkins_data:
#    driver: local
  statics:
    name: ${COMPOSE_PROJECT_NAME}-statics
#  nginx-confd:
#    name: ${COMPOSE_PROJECT_NAME}-nginxconfd
#  nginx-certificates:
#    name: ${COMPOSE_PROJECT_NAME}-nginxcerts
  geoserver-data-dir:
    name: ${COMPOSE_PROJECT_NAME}-gsdatadir
  dbdata:
    name: ${COMPOSE_PROJECT_NAME}-dbdata
  dbbackups:
    name: ${COMPOSE_PROJECT_NAME}-dbbackups
  backup-restore:
    name: ${COMPOSE_PROJECT_NAME}-backup-restore
  data:
    name: ${COMPOSE_PROJECT_NAME}-data
  tmp:
    name: ${COMPOSE_PROJECT_NAME}-tmp
